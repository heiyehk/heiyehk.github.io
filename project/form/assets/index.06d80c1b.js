import{g as e}from"./reactiveFormOptions.42df1a8c.js";import{g as n}from"./index.19809cc7.js";let r;const t=(e,r,t)=>{if(!e)return"";let o="";for(const l of Object.keys(e))void 0!==e[l]&&null!==e[l]&&""!==e[l]&&(t&&t.includes(l)||("Object"===n(e[l])&&n("Array"===e[l])?o+=`:${l}=${JSON.stringify(e[l]).replace(/"(.+)":/,"$1:")} `:"Boolean"===n(e[l])||(null==r?void 0:r.includes(l))?o+=`:${l}="${e[l]}" `:o+=`${l}="${e[l]}" `));return o.substr(0,o.length-1)},o=()=>`  ${(()=>{let e="";for(const n of r.__attr__){const o=n.options.label?` label="${n.label}`:"",l=n.required?` name="${n._key}"`:"",a="size"in r?` size="${r.size}"`:"",i="a-Switch"===n.component?"checked":"value";"a-Divider"===n.component?e+=`<${n.component} ${t(n.options.props)} />\n    `:e+=`<a-form-item${o}"${l}>\n      <${n.component} v-model:${i}="${r.model}.${n._key}"${a} ${t(n.options.props,[],["value","size","checked"])} /></a-form-item>\n    `}return e.substr(0,e.length-5)})()}${(()=>{if(!r.submitBtns)return"";let e=`  <a-button type="primary" @click="onSubmit">${r.confirmText}</a-button>`;return r.cancel&&(e+=`\n      <a-button style="margin-left: 10px">${r.cancelText}</a-button>`),r.reset&&(e+=`\n      <a-button style="margin-left: 10px">${r.resetText}</a-button>`),`\n    <a-form-item :wrapper-col="{ span: 14, offset: 4 }">\n    ${e}\n    </a-form-item>`})()}`,l=e=>(r=e,`<template>\n  ${(()=>{const e={ref:"formRef",name:r.name,model:r.model,rules:r.rules,validateOnRuleChange:r.validateOnRuleChange,scrollToFirstError:r.scrollToFirstError,validateTrigger:r.validateTrigger,hideRequiredMark:r.hideRequiredMark,labelCol:r.labelCol,labelAlign:r.labelAlign,layout:r.layout};return`<a-form ${t(e,["rules","model"])}>\n  ${o()}\n  </a-form>`})()}\n</template>\n`);let a,i;const s={},m={},c=()=>{var e;for(const r of a.__attr__)"a-Divider"!==r.component&&(s[r._key]=n(null==(e=r.options.props)?void 0:e.value).toLowerCase()),r.rules&&"a-Divider"!==r.component&&(m[r._key]=r.rules)},u=(e,n=2)=>JSON.stringify(e,null,n).replace(/\n/g,"\n    ").replace(/"(.+)":/g,"$1:"),p=()=>`${(()=>{let e="import { defineComponent, reactive, ref, toRaw, UnwrapRef } from 'vue';\nimport { ValidateErrorEntity } from 'ant-design-vue/lib/form/interface';";return i.includes("a-Bytemd")&&(e+="\nimport Bytemd from '@/components/Bytemd/editor.vue'"),i.includes("a-Tinymce")&&(e+="\nimport Tinymce from '@/components/Tinymce.vue'"),e})()}\n\ninterface FormModelType ${JSON.stringify(s,null,2).replace(/"/g,"").replace(/: (.*)/gm,": $1;").replace(/,;/g,";").replace(/(undefined);/g,"$1 | string;").replace(/(boolean|number)/g,"undefined | $1;")}\n\nexport default defineComponent({${(()=>{const e=e=>`\n  components: {\n    ${e}\n  },`;let n="";return i.includes("a-Tinymce")&&(n+="'a-Tinymce': Tinymce"),console.log(n,e(n)),i.includes("a-Bytemd")&&(""!==n&&(n+=",\n"),n+="    'a-Bytemd': Bytemd"),""===n?"":e(n)})()}\n  setup() {\n    const formRef = ref();\n\n    /**\n     * 表单model\n     */\n    const ${a.model}: UnwrapRef<FormModelType> = reactive(${u(s,2).replace(/"(number|boolean|undefined)"/g,"undefined").replace(/"string"/g,"''")});\n\n    /**\n     * 表单rules验证\n     */\n    const ${a.rules} = reactive(${u(m,2).replace(/"/g,"'")});\n\n    /**\n     * 表单提交\n     */\n    const onSubmit = () => {\n      formRef.value\n        .validate()\n        .then(() => {\n          console.log('values', ${a.model}, toRaw(${a.model}));\n        })\n        .catch((error: ValidateErrorEntity<FormModelType>) => {\n          console.log('error', error);\n        });\n    };\n\n    return {\n      formRef,\n      ${a.model},\n      ${a.rules},\n      onSubmit\n    };\n  }\n});`,d=e=>{return(e=>{a=e,i=a.__attr__.map((e=>e.component)),c()})(e),n=p(),`\n<script${"ts"?' lang="ts"':""}>\n${n}\n<\/script>\n`;var n},f=e(location.hash.split("/")[3]),$=()=>l(f)+d(f)+'\n<style lang="less" scoped></style>\n';export{$ as V};
